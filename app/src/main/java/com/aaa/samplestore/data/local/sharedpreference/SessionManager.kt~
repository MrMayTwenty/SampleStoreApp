package com.aaa.samplestore.data.local.sharedpreference

import android.content.Context
import com.aaa.samplestore.common.Constants
import com.aaa.samplestore.domain.model.User
import dagger.hilt.android.qualifiers.ApplicationContext
import javax.inject.Inject

class SessionManager @Inject constructor(
    @ApplicationContext private val context: Context
) : BaseSharedPreferences(context.getSharedPreferences(Constants.SharedPref.PREF_NAME, Context.MODE_PRIVATE)) {
    fun saveUserId(userId: Long) {
        putLong(Constants.SessionKeys.USER_ID, userId)
    }

    fun saveUserDetails(user: User){
        putString(Constants.SessionKeys.USER_NAME, user.name.firstname + " " + user.name.lastname)
        putString(Constants.SessionKeys.USER_ADDRESS, "${user.address.city}, ${user.address.street}, ${user.address.zipcode}")
        putString(Constants.SessionKeys.USER_PHONE, user.phone)
    }

    fun getUserName(): String? {
        getString(Constants.SessionKeys.USER_NAME, null)?.let {
            return it
        }
        return null
    }

    fun getUserAddress(): String? {
        getString(Constants.SessionKeys.USER_ADDRESS, null)?.let {
            return it
        }
        return null
    }

    fun getUserPhone(): String? {
        getString(Constants.SessionKeys.USER_PHONE, null)?.let {
            return it
        }
        return null
    }
    
    fun getUserId(): Long? {
        val userId = getLong(Constants.SessionKeys.USER_ID, -1L)
        return if (userId != -1L) userId else null
    }

    fun clearSession() {
        clear()
    }
}